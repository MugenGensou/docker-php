; Start a new pool named 'www'.
; the variable $pool can be used in any directive and will be replaced by the
; pool name ('www' here)
[www]

; 设置接受 FastCGI 请求的地址。可用格式为：'ip:port'，'port'，'/path/to/unix/socket'。每个进程池都需要设置。
listen = 0.0.0.0:9000

; 设置 listen(2) 的 backlog 最大值。“-1”表示无限制。默认值：-1。
; listen.backlog int

; 设置允许连接到 FastCGI 的服务器 IPV4 地址。等同于 PHP FastCGI (5.2.2+) 中的 FCGI_WEB_SERVER_ADDRS 环境变量。仅对 TCP 监听起作用。
; 每个地址是用逗号分隔，如果没有设置或者为空，则允许任何服务器请求连接。默认值：any。 PHP 5.5.20 和 5.6.4起，开始支持 IPv6 地址。
; listen.allowed_clients string

; 如果使用了 Unix 套接字，表示它的权限。在 Linux 中必须设置读/写权限，以便用于 WEB 服务器连接。
; 在很多 BSD 派生的系统中可以忽略权限允许自由连接。 默认值：运行所使用的用户和组，权限为 0660。
; listen.owner string

; 参见 listen.owner。
; listen.group string

; 参见 listen.owner。
; listen.mode string

; 当系统支持 POSIX ACL（Access Control Lists）时，可以设置使用此选项。
; 当设置了的时候，将会忽略 listen.owner 和 listen.group。 值是逗号分割的用户名列表。 PHP 5.6.5 起可用。
; listen.acl_users string

; 参见 listen.acl_users。 值是逗号分割的用户组名称列表。 PHP 5.6.5 起可用。
; listen.acl_groups string

; FPM 进程运行的Unix用户。必须设置。
user = www-data

; FPM 进程运行的 Unix 用户组。如果不设置，就使用默认用户的用户组。
group = www-data

; 设置进程管理器如何管理子进程。可用值：static，ondemand，dynamic。必须设置。
; static - 子进程的数量是固定的（pm.max_children）。
; ondemand - 进程在有需求时才产生（当请求时才启动。与 dynamic 相反，在服务启动时 pm.start_servers 就启动了。
; dynamic - 子进程的数量在下面配置的基础上动态设置：pm.max_children，pm.start_servers，pm.min_spare_servers，pm.max_spare_servers。
pm = dynamic

; pm 设置为 static 时表示创建的子进程的数量，pm 设置为 dynamic 时表示最大可创建的子进程的数量。必须设置。
; 该选项设置可以同时提供服务的请求数限制。类似 Apache 的 mpm_prefork 中 MaxClients 的设置和 普通PHP FastCGI中的 PHP_FCGI_CHILDREN 环境变量。
pm.max_children = 100

; 设置启动时创建的子进程数目。仅在 pm 设置为 dynamic 时使用。默认值：min_spare_servers + (max_spare_servers - min_spare_servers) / 2。
; pm.start_servers = 10

; 设置空闲服务进程的最低数目。仅在 pm 设置为 dynamic 时使用。必须设置。
pm.min_spare_servers = 10

; 设置空闲服务进程的最大数目。仅在 pm 设置为 dynamic 时使用。必须设置。
pm.max_spare_servers = 20

; 秒数，多久之后结束空闲进程。 仅当设置 pm 为 ondemand。 可用单位：s（秒），m（分），h（小时）或者 d（天）。默认单位：10s。
; pm.process_idle_timeout mixed

; 设置每个子进程重生之前服务的请求数。对于可能存在内存泄漏的第三方模块来说是非常有用的。
; 如果设置为 '0' 则一直接受请求，等同于 PHP_FCGI_MAX_REQUESTS 环境变量。默认值：0。
; pm.max_requests int

; FPM 状态页面的网址。如果没有设置，则无法访问状态页面，默认值：无。
; pm.status_path string

; FPM 监控页面的 ping 网址。如果没有设置，则无法访问 ping 页面。该页面用于外部检测 FPM 是否存活并且可以响应请求。请注意必须以斜线开头（/）。
; ping.path string

; 用于定义 ping 请求的返回响应。返回为 HTTP 200 的 text/plain 格式文本。默认值：pong。
; ping.response string

; 设置 worker 的 nice(2)优先级（如果设置了的话）。 该值从 -19（最高优先级） 到 20（更低优先级）。 默认值：不设置
; process.priority int

; 检测路径时使用的前缀。
; prefix string

; 设置单个请求的超时中止时间。该选项可能会对 php.ini 设置中的 'max_execution_time' 因为某些特殊原因没有中止运行的脚本有用。设置为 '0' 表示 'Off'。可用单位：s（秒），m（分），h（小时）或者 d（天）。默认单位：s（秒）。默认值：0（关闭）。
; request_terminate_timeout mixed

; 当一个请求该设置的超时时间后，就会将对应的 PHP 调用堆栈信息完整写入到慢日志中。设置为 '0' 表示 'Off'。可用单位：s（秒），m（分），h（小时）或者 d（天）。默认单位：s（秒）。默认值：0（关闭）。
; request_slowlog_timeout mixed

; 慢请求的记录日志。默认值：#INSTALL_PREFIX#/log/php-fpm.log.slow。
; slowlog string

; 设置文件打开描述符的 rlimit 限制。默认值：系统定义值。
; rlimit_files int

; 设置核心 rlimit 最大限制值。可用值：'unlimited'，0 或者正整数。默认值：系统定义值。
; rlimit_core int

; 启动时的 Chroot 目录。所定义的目录需要是绝对路径。如果没有设置，则 chroot 不被使用。
; chroot string

; 设置启动目录，启动时会自动 Chdir 到该目录。所定义的目录需要是绝对路径。默认值：当前目录，或者根目录（chroot时）。
; chdir string

; 重定向运行过程中的 stdout 和 stderr 到主要的错误日志文件中。如果没有设置，stdout 和 stderr 将会根据 FastCGI 的规则被重定向到 /dev/null。默认值：无。
; catch_workers_output = yes

; 为 FPM worker 进程清除环境变量。 在进程池配置文件里设置环境变量前，阻止任意系统的环境变量进入 FPM worker 进程。 自 PHP 5.4.27、 5.5.11 和 5.6.0 起。 默认值: Yes
; clear_env boolean

; 限制 FPM 允许解析的脚本扩展名。 此设置可以预防 web 服务器配置的错误。 应当限制 FPM 仅仅解析 .php 扩展名，阻止恶意用户使用其他扩展名运行 php 代码。 默认值： .php .phar
; security.limit_extensions string

; Access log 文件。 默认值：不设置
; access.log string

; access log 的格式。 默认值: "%R - %u %t \"%m %r\" %s"
; access.format string
