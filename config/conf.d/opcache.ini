[opcache]
; NOTE: The actual opcache.so extention is NOT SET HERE but rather (/usr/local/etc/php/conf.d/docker-php-ext-opcache.ini)

opcache.enable = 1

opcache.enable_cli = 0

; OPcache 的共享内存大小，以兆字节为单位。
opcache.memory_consumption = 256

; OPcache 哈希表中可存储的脚本文件数量上限。
; 真实的取值是在质数集合 { 223, 463, 983, 1979, 3907, 7963, 16229, 32531, 65407, 130987 } 中找到的第一个大于等于设置值的质数。
; 设置值取值范围最小值是 200，最大值在 PHP 5.5.6 之前是 100000，PHP 5.5.6 及之后是 1000000。
opcache.max_accelerated_files = 100000

; 浪费内存的上限，以百分比计。 如果达到此上限，那么 OPcache 将产生重新启动续发事件。
opcache.max_wasted_percentage = 5

; 如果启用，OPcache 将在哈希表的脚本键之后附加改脚本的工作目录， 以避免同名脚本冲突的问题。 禁用此选项可以提高性能，但是可能会导致应用崩溃。
opcache.use_cwd = 1

; 如果启用，那么 OPcache 会每隔 opcache.revalidate_freq 设定的秒数 检查脚本是否更新。
; 如果禁用此选项，你必须使用 opcache_reset() 或者 opcache_invalidate() 函数来手动重置 OPcache，也可以 通过重启 Web 服务器来使文件系统更改生效。
opcache.validate_timestamps = 1
opcache.revalidate_freq = 60

; 如果禁用，脚本文件中的注释内容将不会被包含到操作码缓存文件， 这样可以有效减小优化后的文件体积。
; 禁用此配置指令可能会导致一些依赖注释或注解的 应用或框架无法正常工作， 比如： Doctrine， Zend Framework 2 以及 PHPUnit。
opcache.save_comments = 0

; 如果禁用，则即使文件中包含注释，也不会加载这些注释内容。 本选项可以和 opcache.save_comments 一起使用，以实现按需加载注释内容。
opcache.load_comments = 0

; 如果启用，则会使用快速停止续发事件。
; 所谓快速停止续发事件是指依赖 Zend 引擎的内存管理模块 一次释放全部请求变量的内存，而不是依次释放每一个已分配的内存块。
opcache.fast_shutdown = 1

; 控制优化级别的二进制位掩码。
opcache.optimization_level = -1

; 以字节为单位的缓存的文件大小上限。设置为 0 表示缓存全部文件。
opcache.max_file_size = 0

; 如果是非 0 值，OPcache 将会每隔 N 次请求检查缓存校验和。
; N 即为此配置指令的设置值。 由于此选项对于性能有较大影响，请尽在调试环境使用。
opcache.consistency_checks = 0
